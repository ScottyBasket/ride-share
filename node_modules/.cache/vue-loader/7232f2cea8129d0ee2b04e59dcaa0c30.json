{"remainingRequest":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eli/Desktop/gitPractice/ride-share/src/pages/Locations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eli/Desktop/gitPractice/ride-share/src/pages/Locations.vue","mtime":1652415201211},{"path":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1651706604226},{"path":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/babel-loader/lib/index.js","mtime":1651706604188},{"path":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/vuetify-loader/lib/loader.js","mtime":1651706616075},{"path":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1651706604226},{"path":"/Users/eli/Desktop/gitPractice/ride-share/node_modules/vue-loader/lib/index.js","mtime":1651706611467}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTG9jYXRpb25zIiwKCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBoZWFkZXJzOiBbCiAgICAgICAgeyB0ZXh0OiAiTmFtZSIsIHZhbHVlOiAibmFtZSIgfSwKICAgICAgICB7IHRleHQ6ICJBZGRyZXNzIiwgdmFsdWU6ICJhZGRyZXNzIiB9LAogICAgICAgIHsgdGV4dDogIkNpdHkiLCB2YWx1ZTogImNpdHkiIH0sCiAgICAgICAgeyB0ZXh0OiAiWmlwIENvZGUiLCB2YWx1ZTogInppcENvZGUiIH0sCiAgICAgICAgeyB0ZXh0OiAiU3RhdGUiLCB2YWx1ZTogInN0YXRlIiB9CiAgICAgIF0sCiAgICAgIExvY2F0aW9uczogW10sCgogICAgICBzbmFja2JhcjogewogICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgIHRleHQ6ICIiCiAgICAgIH0KICAgIH07CiAgfSwKCiAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLiRheGlvcy5nZXQoIi9sb2NhdGlvbnMiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5sb2NhdGlvbnMgPSByZXNwb25zZS5kYXRhLm1hcChsb2NhdGlvbnMgPT4gKHsKICAgICAgICBuYW1lOiBsb2NhdGlvbnMubmFtZSwKICAgICAgICBhZGRyZXNzOiBsb2NhdGlvbnMuYWRkcmVzcywKICAgICAgICBjaXR5OiBsb2NhdGlvbnMuY2l0eSwKICAgICAgICB6aXBDb2RlOiBsb2NhdGlvbnMuemlwQ29kZSwKICAgICAgICBzdGF0ZTpsb2NhdGlvbnMuc3RhdGUKICAgICAgfSkpOwogICAgfSk7CiAgfSwKCiAgbWV0aG9kczogewogICAgLy8gRGlzcGxheSBhIHNuYWNrYmFyIG1lc3NhZ2UuCiAgICBzaG93U25hY2tiYXIodGV4dCkgewogICAgICB0aGlzLnNuYWNrYmFyLnRleHQgPSB0ZXh0OwogICAgICB0aGlzLnNuYWNrYmFyLnNob3cgPSB0cnVlOwogICAgfSwKCiAgICAvLyBDYWxjdWxhdGUgdGhlIENTUyBjbGFzcyBmb3IgYW4gaXRlbQogICAgaXRlbUNsYXNzKGl0ZW0pIHsKICAgICAgY29uc3QgY3VycmVudExvY2F0aW9ucyA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRMb2NhdGlvbnM7CiAgICAgIGlmIChjdXJyZW50TG9jYXRpb25zICYmIGN1cnJlbnRMb2NhdGlvbnMuaWQgPT09IGl0ZW0uaWQpIHsKICAgICAgICByZXR1cm4gImN1cnJlbnRMb2NhdGlvbnMiOwogICAgICB9CiAgICB9LAoKICAgIC8vIFVwZGF0ZSBhY2NvdW50IGluZm9ybWF0aW9uLgogICAgdXBkYXRlTG9jYXRpb25zKGl0ZW0pIHsKICAgICAgY29uc29sZS5sb2coIlVQREFURSIsIEpTT04uc3RyaW5naWZ5KGl0ZW0sIG51bGwsIDIpKTsKICAgICAgdGhpcy5zaG93U25hY2tiYXIoIlNvcnJ5LCB1cGRhdGUgaXMgbm90IHlldCBpbXBsZW1lbnRlZC4iKTsKICAgIH0sCgogICAgLy8gRGVsZXRlIGFuIGFjY291bnQuCiAgICBkZWxldGVMb2NhdGlvbnMoaXRlbSkgewogICAgICB0aGlzLiRheGlvcy5kZWxldGUoYC9sb2NhdGlvbnMvJHtpdGVtLmlkfWApLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm9rKSB7CiAgICAgICAgICAvLyBUaGUgZGVsZXRlIG9wZXJhdGlvbiB3b3JrZWQgb24gdGhlIHNlcnZlcjsgZGVsZXRlIHRoZSBsb2NhbCBhY2NvdW50CiAgICAgICAgICAvLyBieSBmaWx0ZXJpbmcgdGhlIGRlbGV0ZWQgYWNjb3VudCBmcm9tIHRoZSBsaXN0IG9mIGFjY291bnRzLgogICAgICAgICAgdGhpcy5sb2NhdGlvbnMgPSB0aGlzLmxvY2F0aW9ucy5maWx0ZXIoCiAgICAgICAgICAgIGxvY2F0aW9ucyA9PiBsb2NhdGlvbnMuaWQgIT09IGl0ZW0uaWQKICAgICAgICAgICk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Locations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Locations.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-container>\n    <div>\n      <h4 class=\"display-1\">Locations</h4>\n\n      <v-data-table\n        class=\"elevation-1\"\n        v-bind:headers=\"headers\"\n        v-bind:items=\"locations\"\n      >\n        <template v-slot:item=\"{ item }\">\n          <tr v-bind:class=\"itemClass(item)\">\n            <td>{{ item.name }}</td>\n            <td>{{ item.address }}</td>\n            <td>{{ item.city }}</td>\n            <td>{{ item.zipCode }}</td>\n            <td>{{ item.state }}</td>\n            <td>\n              <v-icon small @click=\"deleteLocations(item)\">\n                mdi-delete\n              </v-icon>\n              <v-icon small class=\"ml-2\" @click=\"updateLocations(item)\">\n                mdi-pencil\n              </v-icon>\n            </td>\n          </tr>\n        </template>\n      </v-data-table>\n\n      <v-snackbar v-model=\"snackbar.show\">\n        {{ snackbar.text }}\n        <v-btn color=\"blue\" text @click=\"snackbar.show = false\">\n          Close\n        </v-btn>\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  name: \"Locations\",\n\n  data: function() {\n    return {\n      headers: [\n        { text: \"Name\", value: \"name\" },\n        { text: \"Address\", value: \"address\" },\n        { text: \"City\", value: \"city\" },\n        { text: \"Zip Code\", value: \"zipCode\" },\n        { text: \"State\", value: \"state\" }\n      ],\n      Locations: [],\n\n      snackbar: {\n        show: false,\n        text: \"\"\n      }\n    };\n  },\n\n  mounted: function() {\n    this.$axios.get(\"/locations\").then(response => {\n      this.locations = response.data.map(locations => ({\n        name: locations.name,\n        address: locations.address,\n        city: locations.city,\n        zipCode: locations.zipCode,\n        state:locations.state\n      }));\n    });\n  },\n\n  methods: {\n    // Display a snackbar message.\n    showSnackbar(text) {\n      this.snackbar.text = text;\n      this.snackbar.show = true;\n    },\n\n    // Calculate the CSS class for an item\n    itemClass(item) {\n      const currentLocations = this.$store.state.currentLocations;\n      if (currentLocations && currentLocations.id === item.id) {\n        return \"currentLocations\";\n      }\n    },\n\n    // Update account information.\n    updateLocations(item) {\n      console.log(\"UPDATE\", JSON.stringify(item, null, 2));\n      this.showSnackbar(\"Sorry, update is not yet implemented.\");\n    },\n\n    // Delete an account.\n    deleteLocations(item) {\n      this.$axios.delete(`/locations/${item.id}`).then(response => {\n        if (response.data.ok) {\n          // The delete operation worked on the server; delete the local account\n          // by filtering the deleted account from the list of accounts.\n          this.locations = this.locations.filter(\n            locations => locations.id !== item.id\n          );\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.currentLocations {\n  background: lightcoral;\n}\n</style>\n"]}]}