{"remainingRequest":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/herschel/my-new-module/GitGroupWork/ride-share/src/pages/Passengers.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/src/pages/Passengers.vue","mtime":1652916359735},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/css-loader/dist/cjs.js","mtime":1652435181832},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1652435186009},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/postcss-loader/src/index.js","mtime":1652435184251},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/vuetify-loader/lib/loader.js","mtime":1652435186114},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1652435181076},{"path":"/Users/herschel/my-new-module/GitGroupWork/ride-share/node_modules/vue-loader/lib/index.js","mtime":1652435186009}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY3VycmVudHBhc3NlbmdlcnMgewogIGJhY2tncm91bmQ6IGxpZ2h0Y29yYWw7Cn0K"},{"version":3,"sources":["Passengers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA","file":"Passengers.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-container>\n    <div>\n      <h4 class=\"display-1\">Passengers</h4>\n\n      <v-data-table\n        class=\"elevation-1\"\n        v-bind:headers=\"headers\"\n        v-bind:items=\"passengers\"\n      >\n        <template v-slot:item=\"{ item }\">\n          <tr v-bind:class=\"itemClass(item)\">\n            <td>{{ item.first_name }}</td>\n            <td>{{ item.last_name }}</td>\n            <td>{{ item.date }}</td>\n            <td>{{ item.time }}</td>\n            <td>{{ item.distance }}</td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.address }}</td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.address }}</td>\n            <td>\n              <v-icon small @click=\"deletePassengers(item)\">\n                mdi-delete\n              </v-icon>\n              <v-icon small class=\"ml-2\" @click=\"updatePassengers(item)\">\n                mdi-pencil\n              </v-icon>\n            </td>\n          </tr>\n        </template>\n      </v-data-table>\n\n      <v-snackbar v-model=\"snackbar.show\">\n        {{ snackbar.text }}\n        <v-btn color=\"blue\" text @click=\"snackbar.show = false\">\n          Close\n        </v-btn>\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  name: \"passengers\",\n\n  data: function() {\n    return {\n      headers: [\n        { text: \"First Name\", value: \"first_name\" },\n        { text: \"Last Name\", value: \"last_name\" },\n        { text: \"Date\", value: \"date\" },\n        { text: \"Time\", value: \"time\" },\n        { text: \"Distance (Miles)\", value: \"distance\" },\n        { text: \"From Location\", value: \"name\" },\n        { text: \"From Address\", value: \"address\" },\n        { text: \"To Location\", value: \"toName\" },\n        { text: \"To Address\", value: \"toAddress\" }\n      ],\n\n      passengers: [],\n\n      snackbar: {\n        show: false,\n        text: \"\"\n      }\n    };\n  },\n\n  mounted: function() {\n    this.$axios.get(\"/passengers\").then(response => {\n      this.passengers = response.data.map(passengers => ({\n        id: passengers.id,\n        first_name: passengers.users.first_name,\n        last_name: passengers.users.last_name,\n        date: passengers.rides.date,\n        time: passengers.rides.time,\n        distance: passengers.rides.distance,\n        name: passengers.rides.locations.name,\n        address: passengers.rides.locations.address,\n        toName: passengers.rides.locations.name,\n        toAddress: passengers.rides.locations.address\n      }));\n    });\n  },\n\n  methods: {\n    // Display a snackbar message.\n    showSnackbar(text) {\n      this.snackbar.text = text;\n      this.snackbar.show = true;\n    },\n\n    // Calculate the CSS class for an item\n    itemClass(item) {\n      const currentpassengers = this.$store.state.currentpassengers;\n      if (currentpassengers && currentpassengers.id === item.id) {\n        return \"currentpassengers\";\n      }\n    },\n\n    // Update location information.\n    updatepassengers(item) {\n      console.log(\"UPDATE\", JSON.stringify(item, null, 2));\n      this.showSnackbar(\"Sorry, update is not yet implemented.\");\n    },\n\n    // Delete a location.\n    deletepassengers(item) {\n      this.$axios.delete(`/passengers/${item.id}`).then(response => {\n        if (response.data.ok) {\n          // The delete operation worked on the server; delete the local location\n          // by filtering the deleted location from the list of locations.\n          this.passengers = this.passengers.filter(\n            passengers => passengers.id !== item.id\n          );\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.currentpassengers {\n  background: lightcoral;\n}\n</style>\n"]}]}